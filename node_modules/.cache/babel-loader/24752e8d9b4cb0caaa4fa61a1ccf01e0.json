{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\TipCalculator\\\\src\\\\components\\\\Bill\\\\BillCalculation.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Button from \"../UI/Button/Button\";\nimport classes from \"./BillCalculation.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BillCalculation = props => {\n  _s();\n\n  const [bill, setBill] = useState(\"0.00\");\n  const [peopleCount, setPeopleCount] = useState(\"1\");\n  const [tipPercentage, setTipPercentage] = useState(\"0\");\n  const [customPercentage, setCustomPercentage] = useState(\"Custom\");\n  const [pressed, setPressed] = useState(false);\n\n  const billHandler = event => {\n    setBill(event.target.value);\n    console.log(bill);\n  };\n\n  const peopleAmountHandler = event => {\n    setPeopleCount(event.target.value);\n  };\n\n  const tipPercentageHandler = event => {\n    setTipPercentage(event.target.value);\n  };\n\n  const customPercentageHandler = event => {\n    setCustomPercentage(event.target.value);\n    setTipPercentage(event.target.value / 100);\n  };\n\n  const customPercentageResetHandler = () => {\n    if (customPercentage === 'Custom') {\n      setCustomPercentage(\"\");\n    }\n\n    if (customPercentage === '') {\n      setCustomPercentage('Custom');\n    }\n  };\n\n  useEffect(() => {\n    const data = {\n      total: (bill * (1 + Number(tipPercentage)) / peopleCount).toFixed(2),\n      tip: (Number(bill) * Number(tipPercentage) / peopleCount).toFixed(2).toString()\n    };\n    props.onBillChange(data);\n  }, [bill, tipPercentage, peopleCount]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.bill,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Bill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: billHandler,\n      type: \"number\",\n      value: bill,\n      step: \"0.01\",\n      min: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select Tip %\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.05\",\n        onClick: tipPercentageHandler,\n        className: pressed && classes.pressed,\n        children: \"5%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.1\",\n        onClick: tipPercentageHandler,\n        children: \"10%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.15\",\n        onClick: tipPercentageHandler,\n        children: \"15%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.25\",\n        onClick: tipPercentageHandler,\n        children: \"25%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.50\",\n        onClick: tipPercentageHandler,\n        children: \"50%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: customPercentage,\n          onChange: customPercentageHandler,\n          onFocus: customPercentageResetHandler,\n          onBlur: customPercentageResetHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Number of People\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: peopleAmountHandler,\n      type: \"number\",\n      value: peopleCount,\n      step: \"1\",\n      min: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BillCalculation, \"scn92MFTAMfZImc13lTPAaL6TaE=\");\n\n_c = BillCalculation;\nexport default BillCalculation;\n\nvar _c;\n\n$RefreshReg$(_c, \"BillCalculation\");","map":{"version":3,"sources":["E:/Coding/TipCalculator/src/components/Bill/BillCalculation.js"],"names":["useEffect","useState","Button","classes","BillCalculation","props","bill","setBill","peopleCount","setPeopleCount","tipPercentage","setTipPercentage","customPercentage","setCustomPercentage","pressed","setPressed","billHandler","event","target","value","console","log","peopleAmountHandler","tipPercentageHandler","customPercentageHandler","customPercentageResetHandler","data","total","Number","toFixed","tip","toString","onBillChange","buttons"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport classes from \"./BillCalculation.module.css\";\r\nconst BillCalculation = (props) => {\r\n  const [bill, setBill] = useState(\"0.00\");\r\n  const [peopleCount, setPeopleCount] = useState(\"1\");\r\n  const [tipPercentage, setTipPercentage] = useState(\"0\");\r\n  const [customPercentage, setCustomPercentage] = useState(\"Custom\");\r\n  const [pressed, setPressed] = useState(false)\r\n\r\n  const billHandler = (event) => {\r\n    setBill(event.target.value);\r\n\r\n    console.log(bill);\r\n  };\r\n\r\n  const peopleAmountHandler = (event) => {\r\n    setPeopleCount(event.target.value);\r\n  };\r\n\r\n  const tipPercentageHandler = (event) => {\r\n    setTipPercentage(event.target.value);\r\n  };\r\n\r\n  const customPercentageHandler = (event) => {\r\n    setCustomPercentage(event.target.value);\r\n    setTipPercentage(event.target.value / 100);\r\n  };\r\n\r\n  const customPercentageResetHandler = () => {\r\n    if(customPercentage==='Custom'){\r\n      setCustomPercentage(\"\");\r\n    }\r\n\r\n    if(customPercentage===''){\r\n      setCustomPercentage('Custom')\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = {\r\n      total: ((bill * (1 + Number(tipPercentage))) / peopleCount).toFixed(2),\r\n      tip: ((Number(bill) * Number(tipPercentage)) / peopleCount)\r\n        .toFixed(2)\r\n        .toString(),\r\n    };\r\n\r\n    props.onBillChange(data);\r\n  }, [bill, tipPercentage, peopleCount]);\r\n\r\n  return (\r\n    <form className={classes.bill}>\r\n      <label>Bill</label>\r\n      <input\r\n        onChange={billHandler}\r\n        type=\"number\"\r\n        value={bill}\r\n        step=\"0.01\"\r\n        min=\"0\"\r\n      ></input>\r\n      <label>Select Tip %</label>\r\n      <div className={classes.buttons}>\r\n        <Button value=\"0.05\" onClick={tipPercentageHandler} className={pressed && classes.pressed}>\r\n          5%\r\n        </Button>\r\n        <Button value=\"0.1\" onClick={tipPercentageHandler}>\r\n          10%\r\n        </Button>\r\n        <Button value=\"0.15\" onClick={tipPercentageHandler}>\r\n          15%\r\n        </Button>\r\n        <Button value=\"0.25\" onClick={tipPercentageHandler}>\r\n          25%\r\n        </Button>\r\n        <Button value=\"0.50\" onClick={tipPercentageHandler}>\r\n          50%\r\n        </Button>\r\n        <Button className=\"input\">\r\n          <input\r\n            value={customPercentage}\r\n            onChange={customPercentageHandler}\r\n            onFocus={customPercentageResetHandler}\r\n            onBlur={customPercentageResetHandler}\r\n          ></input>\r\n        </Button>\r\n      </div>\r\n      <label>Number of People</label>\r\n      <input\r\n        onChange={peopleAmountHandler}\r\n        type=\"number\"\r\n        value={peopleCount}\r\n        step=\"1\"\r\n        min=\"1\"\r\n      ></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BillCalculation;\r\n"]},"metadata":{},"sourceType":"module"}