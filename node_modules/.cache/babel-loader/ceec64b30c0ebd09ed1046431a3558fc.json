{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\TipCalculator\\\\src\\\\components\\\\Bill\\\\BillCalculation.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Button from \"../UI/Button/Button\";\nimport classes from \"./BillCalculation.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BillCalculation = props => {\n  _s();\n\n  const [bill, setBill] = useState(\"0.00\");\n  const [peopleCount, setPeopleCount] = useState(\"1\");\n  const [tipPercentage, setTipPercentage] = useState(\"0\");\n  const [customPercentage, setCustomPercentage] = useState(\"Custom\");\n\n  const billHandler = event => {\n    setBill(event.target.value);\n    console.log(bill);\n  };\n\n  const peopleAmountHandler = event => {\n    setPeopleCount(event.target.value);\n  };\n\n  const tipPercentageHandler = event => {\n    setTipPercentage(event.target.value);\n  };\n\n  useEffect(() => {\n    const data = {\n      total: (bill * (1 + Number(tipPercentage))).toFixed(2),\n      tip: (Number(bill) * Number(tipPercentage) / peopleCount).toFixed(2).toString()\n    };\n    props.onBillChange(data);\n  }, [bill, tipPercentage, peopleCount]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.bill,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Bill\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: billHandler,\n      type: \"number\",\n      value: bill,\n      step: \"0.01\",\n      min: \"0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select Tip %\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.05\",\n        onClick: tipPercentageHandler,\n        children: \"5%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.1\",\n        onClick: tipPercentageHandler,\n        children: \"10%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.15\",\n        onClick: tipPercentageHandler,\n        children: \"15%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.25\",\n        onClick: tipPercentageHandler,\n        children: \"25%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.50\",\n        onClick: tipPercentageHandler,\n        children: \"50%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"input\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: customPercentage,\n          onChange: customPercentageHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 35\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Number of People\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: peopleAmountHandler,\n      type: \"number\",\n      value: peopleCount,\n      step: \"1\",\n      min: \"1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BillCalculation, \"NOdmVgchL6LqxqcnYv1cezt1EG0=\");\n\n_c = BillCalculation;\nexport default BillCalculation;\n\nvar _c;\n\n$RefreshReg$(_c, \"BillCalculation\");","map":{"version":3,"sources":["E:/Coding/TipCalculator/src/components/Bill/BillCalculation.js"],"names":["useEffect","useState","Button","classes","BillCalculation","props","bill","setBill","peopleCount","setPeopleCount","tipPercentage","setTipPercentage","customPercentage","setCustomPercentage","billHandler","event","target","value","console","log","peopleAmountHandler","tipPercentageHandler","data","total","Number","toFixed","tip","toString","onBillChange","buttons","customPercentageHandler"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport classes from \"./BillCalculation.module.css\";\r\nconst BillCalculation = (props) => {\r\n  const [bill, setBill] = useState(\"0.00\");\r\n  const [peopleCount, setPeopleCount] = useState(\"1\");\r\n  const [tipPercentage, setTipPercentage] = useState(\"0\");\r\n  const [customPercentage, setCustomPercentage] = useState(\"Custom\")\r\n\r\n  const billHandler = (event) => {\r\n    setBill(event.target.value);\r\n\r\n    console.log(bill);\r\n  };\r\n\r\n  const peopleAmountHandler = (event) => {\r\n    setPeopleCount(event.target.value);\r\n  };\r\n\r\n  const tipPercentageHandler = (event) => {\r\n    setTipPercentage(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = {\r\n      total: (bill*(1+Number(tipPercentage))).toFixed(2),\r\n      tip: (\r\n        ((Number(bill) * Number(tipPercentage)) /\r\n        peopleCount).toFixed(2)\r\n      ).toString(),\r\n    };\r\n\r\n    props.onBillChange(data);\r\n  }, [bill, tipPercentage, peopleCount]);\r\n\r\n  return (\r\n    <form className={classes.bill}>\r\n      <label>Bill</label>\r\n      <input\r\n        onChange={billHandler}\r\n        type=\"number\"\r\n        value={bill}\r\n        step=\"0.01\"\r\n        min=\"0\"\r\n      ></input>\r\n      <label>Select Tip %</label>\r\n      <div className={classes.buttons}>\r\n        <Button value=\"0.05\" onClick={tipPercentageHandler}>\r\n          5%\r\n        </Button>\r\n        <Button value=\"0.1\" onClick={tipPercentageHandler}>\r\n          10%\r\n        </Button>\r\n        <Button value=\"0.15\" onClick={tipPercentageHandler}>\r\n          15%\r\n        </Button>\r\n        <Button value=\"0.25\" onClick={tipPercentageHandler}>\r\n          25%\r\n        </Button>\r\n        <Button value=\"0.50\" onClick={tipPercentageHandler}>\r\n          50%\r\n        </Button>\r\n        <Button className=\"input\"><input value={customPercentage} onChange={customPercentageHandler}></input></Button>\r\n      </div>\r\n      <label>Number of People</label>\r\n      <input\r\n        onChange={peopleAmountHandler}\r\n        type=\"number\"\r\n        value={peopleCount}\r\n        step=\"1\"\r\n        min=\"1\"\r\n      ></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BillCalculation;\r\n"]},"metadata":{},"sourceType":"module"}