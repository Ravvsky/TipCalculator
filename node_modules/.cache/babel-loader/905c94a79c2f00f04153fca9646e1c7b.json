{"ast":null,"code":"var _jsxFileName = \"E:\\\\Coding\\\\TipCalculator\\\\src\\\\components\\\\Bill\\\\BillCalculation.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Button from \"../UI/Button/Button\";\nimport classes from \"./BillCalculation.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BillCalculation = props => {\n  _s();\n\n  const [bill, setBill] = useState(\"0.00\");\n  const [peopleCount, setPeopleCount] = useState(\"1\");\n  const [tipPercentage, setTipPercentage] = useState(\"0\");\n  const [customPercentage, setCustomPercentage] = useState(\"Custom\");\n  const [pressed, setPressed] = useState();\n  const [error, setError] = useState();\n  const [isError, setIsError] = useState('');\n\n  const billHandler = event => {\n    if (event.target.value < 0) {\n      setError(\"Bill cannot be lower than $0.00\");\n      setBill(\"0\");\n      setIsError('bill');\n    } else {\n      setBill(event.target.value);\n      setError(null);\n    }\n  };\n\n  const peopleAmountHandler = event => {\n    if (event.target.value < 1) {\n      setError(`Can't be lower than one`);\n      setPeopleCount(\"0\");\n      setIsError('people');\n    } else {\n      setPeopleCount(event.target.value);\n    }\n  };\n\n  const tipPercentageHandler = event => {\n    setTipPercentage(event.target.value);\n    setPressed(\"pressed\");\n    setCustomPercentage(\"Custom\");\n  };\n\n  const customPercentageHandler = event => {\n    setCustomPercentage(event.target.value);\n    setTipPercentage(event.target.value / 100);\n    setPressed(\"pressed\");\n  };\n\n  const customPercentageResetHandler = () => {\n    if (customPercentage === \"Custom\") {\n      setCustomPercentage(\"\");\n    }\n\n    if (customPercentage === \"\") {\n      setCustomPercentage(\"Custom\");\n    }\n  };\n\n  useEffect(() => {\n    const data = {\n      total: (bill * (1 + Number(tipPercentage)) / peopleCount).toFixed(2),\n      tip: (Number(bill) * Number(tipPercentage) / peopleCount).toFixed(2).toString()\n    };\n    props.onBillChange(data);\n  }, [bill, tipPercentage, peopleCount]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.bill,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Bill \", isError === 'bill' && error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: billHandler,\n      type: \"number\",\n      value: bill,\n      step: \"0.01\",\n      min: \"0\",\n      className: error && classes.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Select Tip %\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttons,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.05\",\n        onClick: tipPercentageHandler,\n        className: tipPercentage === \"0.05\" && pressed,\n        children: \"5%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.1\",\n        onClick: tipPercentageHandler,\n        className: tipPercentage === \"0.1\" && pressed,\n        children: \"10%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.15\",\n        onClick: tipPercentageHandler,\n        className: tipPercentage === \"0.15\" && pressed,\n        children: \"15%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.25\",\n        onClick: tipPercentageHandler,\n        className: tipPercentage === \"0.25\" && pressed,\n        children: \"25%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: \"0.50\",\n        onClick: tipPercentageHandler,\n        className: tipPercentage === \"0.50\" && pressed,\n        children: \"50%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        value: tipPercentage,\n        className: customPercentage !== \"Custom\" && pressed || customPercentage === '' && pressed,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          value: customPercentage,\n          onChange: customPercentageHandler,\n          onFocus: customPercentageResetHandler,\n          onBlur: customPercentageResetHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number of People \", isError === 'people' && error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: peopleAmountHandler,\n      type: \"number\",\n      value: peopleCount,\n      step: \"1\",\n      min: \"1\",\n      className: error && classes.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BillCalculation, \"duLeTmRLSDpJBE7phxC6wCWAKj8=\");\n\n_c = BillCalculation;\nexport default BillCalculation;\n\nvar _c;\n\n$RefreshReg$(_c, \"BillCalculation\");","map":{"version":3,"sources":["E:/Coding/TipCalculator/src/components/Bill/BillCalculation.js"],"names":["useEffect","useState","Button","classes","BillCalculation","props","bill","setBill","peopleCount","setPeopleCount","tipPercentage","setTipPercentage","customPercentage","setCustomPercentage","pressed","setPressed","error","setError","isError","setIsError","billHandler","event","target","value","peopleAmountHandler","tipPercentageHandler","customPercentageHandler","customPercentageResetHandler","data","total","Number","toFixed","tip","toString","onBillChange","buttons"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nimport Button from \"../UI/Button/Button\";\r\nimport classes from \"./BillCalculation.module.css\";\r\nconst BillCalculation = (props) => {\r\n  const [bill, setBill] = useState(\"0.00\");\r\n  const [peopleCount, setPeopleCount] = useState(\"1\");\r\n  const [tipPercentage, setTipPercentage] = useState(\"0\");\r\n  const [customPercentage, setCustomPercentage] = useState(\"Custom\");\r\n  const [pressed, setPressed] = useState();\r\n  const [error, setError] = useState();\r\n  const [isError, setIsError] = useState('');\r\n\r\n  const billHandler = (event) => {\r\n    if (event.target.value < 0) {\r\n      setError(\"Bill cannot be lower than $0.00\");\r\n      setBill(\"0\");\r\n      setIsError('bill')\r\n\r\n    } else {setBill(event.target.value)\r\n            setError(null)\r\n    \r\n    }\r\n  };\r\n\r\n  const peopleAmountHandler = (event) => {\r\n    if (event.target.value < 1) {\r\n      setError(`Can't be lower than one`);\r\n      setPeopleCount(\"0\");\r\n      setIsError('people')\r\n    } else {\r\n      setPeopleCount(event.target.value);\r\n    }\r\n  };\r\n\r\n  const tipPercentageHandler = (event) => {\r\n    setTipPercentage(event.target.value);\r\n    setPressed(\"pressed\");\r\n    setCustomPercentage(\"Custom\");\r\n  };\r\n\r\n  const customPercentageHandler = (event) => {\r\n    setCustomPercentage(event.target.value);\r\n    setTipPercentage(event.target.value / 100);\r\n    setPressed(\"pressed\");\r\n  };\r\n\r\n  const customPercentageResetHandler = () => {\r\n    if (customPercentage === \"Custom\") {\r\n      setCustomPercentage(\"\");\r\n    }\r\n\r\n    if (customPercentage === \"\") {\r\n      setCustomPercentage(\"Custom\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const data = {\r\n      total: ((bill * (1 + Number(tipPercentage))) / peopleCount).toFixed(2),\r\n      tip: ((Number(bill) * Number(tipPercentage)) / peopleCount)\r\n        .toFixed(2)\r\n        .toString(),\r\n    };\r\n\r\n    props.onBillChange(data);\r\n  }, [bill, tipPercentage, peopleCount]);\r\n\r\n  return (\r\n    <form className={classes.bill}>\r\n      <label>Bill {isError==='bill' && error}</label>\r\n      <input\r\n        onChange={billHandler}\r\n        type=\"number\"\r\n        value={bill}\r\n        step=\"0.01\"\r\n        min=\"0\"\r\n        className={error && classes.error}\r\n      ></input>\r\n      <label>Select Tip %</label>\r\n      <div className={classes.buttons}>\r\n        <Button\r\n          value=\"0.05\"\r\n          onClick={tipPercentageHandler}\r\n          className={tipPercentage === \"0.05\" && pressed}\r\n        >\r\n          5%\r\n        </Button>\r\n        <Button\r\n          value=\"0.1\"\r\n          onClick={tipPercentageHandler}\r\n          className={tipPercentage === \"0.1\" && pressed}\r\n        >\r\n          10%\r\n        </Button>\r\n        <Button\r\n          value=\"0.15\"\r\n          onClick={tipPercentageHandler}\r\n          className={tipPercentage === \"0.15\" && pressed}\r\n        >\r\n          15%\r\n        </Button>\r\n        <Button\r\n          value=\"0.25\"\r\n          onClick={tipPercentageHandler}\r\n          className={tipPercentage === \"0.25\" && pressed}\r\n        >\r\n          25%\r\n        </Button>\r\n        <Button\r\n          value=\"0.50\"\r\n          onClick={tipPercentageHandler}\r\n          className={tipPercentage === \"0.50\" && pressed}\r\n        >\r\n          50%\r\n        </Button>\r\n        <Button\r\n          value={tipPercentage}\r\n          className={(customPercentage !== \"Custom\" && pressed) || (customPercentage === '' && pressed)}\r\n        >\r\n          <input\r\n            value={customPercentage}\r\n            onChange={customPercentageHandler}\r\n            onFocus={customPercentageResetHandler}\r\n            onBlur={customPercentageResetHandler}\r\n            \r\n          ></input>\r\n        </Button>\r\n      </div>\r\n      <label>Number of People {isError==='people' && error}</label>\r\n      <input\r\n        onChange={peopleAmountHandler}\r\n        type=\"number\"\r\n        value={peopleCount}\r\n        step=\"1\"\r\n        min=\"1\"\r\n        className={error && classes.error}\r\n\r\n      ></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default BillCalculation;\r\n"]},"metadata":{},"sourceType":"module"}